version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  web:
    image: ghcr.io/rodionmaulenov/timestamp/web-prod:v1.0.0
    command: /bin/sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn -w 3 scheduler.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery:
    image: ghcr.io/rodionmaulenov/timestamp/celery-prod:v1.0.0
    command: celery -A scheduler worker --loglevel=info
    restart: always
    depends_on:
      web:
        condition: service_healthy
    env_file:
      - .env

  celery-beat:
    image: ghcr.io/rodionmaulenov/timestamp/celery-beat-prod:v1.0.0
    command: celery -A scheduler beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      web:
        condition: service_healthy
    env_file:
      - .env

  nginx:
    image: ghcr.io/rodionmaulenov/timestamp/nginx-prod:v1.0.0
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      web:
        condition: service_healthy
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot

  telegram:
    image: ghcr.io/rodionmaulenov/timestamp/tel-prod:v1.0.0
    command: /bin/sh -c "python schedule/telegram.py"
    depends_on:
      web:
        condition: service_healthy
    env_file:
      - .env


volumes:
  postgres_data:
