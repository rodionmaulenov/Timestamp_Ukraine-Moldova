upstream django {
    server web:8000;
    # connection to the django web service
    # here `web` is the service's name in
    # docker-compose.yml, it is resolved by docker to inner IP address.
    # The `django` is just te name of upstream, used by nginx below.
}
server {
    # the connection to the outside world
    # will be changed to incorporate cert's bot and ssl
    # just to test it localy for now
    listen 80; # port exposed to outside world. Needs to be opened in docker-compose.yml
    server_name demo.docktor-di.com;
    # server_name example.com;
    location / {
      # where to redirect `/` requests
      return 301 https://$host$request_uri; # redirect all non https requests to https
    }
    location /.well-known/acme-challenge/ {
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    # new server, but for ssl (443 port)
    listen 443 ssl; # listen 443 port
    server_name demo.docktor-di.com;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/demo.docktor-di.com/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/demo.docktor-di.com/privkey.pem; # <-this

    location / {
        proxy_pass http://django; # pass these requests to internal upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    client_max_body_size 15M;

     location /static/ {
        alias /usr/src/app/static/;
      }
    location /media/ {
        alias /usr/src/app/media/;
      }
}
