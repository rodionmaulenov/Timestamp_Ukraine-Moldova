name: For getting ssl key at first. Only for this goal.

on:
  push:
    branches:
      - gensslkey

jobs:
  build-dockers-images:
    name: Push images to GIT Registry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v4.0.0

      - name: Install Docker Compose
        run: |
            sudo apt-get update
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo apt install docker-compose -y

      - name: Building docker images
        run: |
            cd docker_gen_ssl
            docker-compose -f docker-compose.cicd.yml build --no-cache

      - name: Push images to registry
        run: |
            echo ${{ secrets.GIT_REGISTRY_ACCESS_TOKEN }} | docker login ghcr.io -u rodionmaulenov --password-stdin
            docker tag nginx-gensslkey ghcr.io/rodionmaulenov/timestamp/nginx-gensslkey:v1.0.0
            docker push ghcr.io/rodionmaulenov/timestamp/nginx-gensslkey:v1.0.0
          

  deploy:
    name: Deploy on AWS EC2
    runs-on: ubuntu-latest
    needs: build-dockers-images

    steps:
      - name: Checkout master
        uses: actions/checkout@v4.0.0

      - name: Add ssh private key
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Add remote server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Create application directories and directories for SSL certificates
        run: |
          ssh ${{ secrets.USER_FOR_EC2 }}@${{ secrets.EC2_SERVER_IP }} /bin/bash << 'EOF'
            mkdir -p /home/${{ secrets.USER_FOR_EC2 }}/timestamp_app/persistentdata/certbot/www/.well-known/acme-challenge/
            mkdir -p /home/${{ secrets.USER_FOR_EC2 }}/timestamp_app/persistentdata/certbot/conf/live/demo.docktor-di.com/
          
            exit 0
          EOF
          scp ./docker_gen_ssl/docker-compose.prod.yml \
          ${{ secrets.USER_FOR_EC2 }}@${{ secrets.EC2_SERVER_IP }}:/home/${{ secrets.USER_FOR_EC2 }}/timestamp_app

      - name: Pull Docker images and Get ssl key
        run: |
          ssh ${{ secrets.USER_FOR_EC2 }}@${{ secrets.EC2_SERVER_IP }} /bin/bash << 'EOF'
            cd /home/${{ secrets.USER_FOR_EC2 }}/timestamp_app

            echo ${{ secrets.GIT_REGISTRY_ACCESS_TOKEN }} | docker login ghcr.io -u rodionmaulenov --password-stdin

            docker pull ghcr.io/rodionmaulenov/timestamp/nginx-gensslkey:v1.0.0

            docker-compose -f docker-compose.prod.yml up -d nginx

            docker-compose -f docker-compose.prod.yml run \
            --rm certbot certonly \
            --webroot -w /var/www/certbot \
            --email ${{ secrets.MY_EMAIL }} \
            -d demo.docktor-di.com \
            --rsa-key-size 2048 \
            --agree-tos \
            --force-renewal \
          EOF
      

